{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/yutapp.js","webpack:///./src/yutools.js","webpack:///./src/CStore.js","webpack:///./src/CEvent.js","webpack:///./src/CView.js","webpack:///./src/CTest.js","webpack:///./version.js","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","theApp","_classCallCheck","this","m_strAppName","m_hMainWnd","m_Store","CStore","aClassName","undefined","oMainFrm","activeView","console","error","aAppName","aWnd","aData","setData","getData","cbFunc","traverseNode","node","_childViewObjsTree","childView","length","alert","yutls","gDebugData","gDebugFlg","data","flg","msgBox","type","strMsg","debug","src","document","write","_style","createElement","innerHTML","getElementsByTagName","appendChild","aOption","map","htmlMap","language","element","getElementById","log","aItem","jsMap","num","parseInt","ms","timeMs","Number","oDate","Date","oYear","getFullYear","oMonth","getMonth","oDay","getDate","oHour","getHours","oMin","getMinutes","oSen","getSeconds","getzf","ua","navigator","userAgent","isIE","ActiveXObject","isFirefox","indexOf","isOpera","opr","isChrome","chrome","isSafari","request","XMLHttpRequest","netscape","security","PrivilegeManager","enablePrivilege","_open","open","method","url","flag","e","ajaxParam","aCallbackSucc","aCallbackErr","aUrl","PostType","toLowerCase","aParam","rc","substring","codeParamData","aHeaderContentType","success","msg","xmlHttpReq","ajaxReq","onreadystatechange","status","readyState","responseText","responseXML","aUrlGet","send","setRequestHeader","aNode","aFileDat","_data","_renderData","_renderData2CbMap","m_bForceFresh","toString","_observer","_this2","_overrideArrayPrototype","path","keys","forEach","variantName","oldVal","set","newVal","_renderCb","aArrayData","owner","result","originalPrototype","Array","overridePrototype","_this","ArrayAction","slice","apply","arguments","__proto__","id","warn","aAct","aKeyVariName","aID","CEvent","handlers","handler","push","event","target","aHandler","splice","CView","_hParent","_strViewID","_strHtmlSrc","_hRegCtrlCb","_oLanguage","_viewStore","_childViewsArray","mounted","_oEvCallback","_evView","_evFactory","addEvent","_defaultevViewMounted","_defaultevActivedView","option","aParent","aNodeID","aHtml","aRegCtrlCallBack","aLanguage","aChildViews","aRenderData","setRenderData","aEvCallback","_loadHtml","load","htmlSwitchLang","_convertVarInHtml","forceRefreshRender","_createChildViews","_this3","getRenderData","val","_this4","viewName","actRenderData2CbMap","aArray","text","newID","regRenderData","numViews","triggerEvent","sender","viewID","self","parentHandle","childObjs","obj","traverseViewTree","aThisView","subviews","allSubviewsMounted","subViewCnt","ff","evMounted","evActived","evHandler","evType","evCallback","aViewNode","visible","className","replace","_showView","arg","thisView","CTest","dat","version","[object Object]","releaseVer","__webpack_exports__","yutools_default","yutapp_default","CView_default","CEvent_default","CStore_default","CTest_default"],"mappings":"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","file":"yut.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/**\r\n * yut main entry.\r\n * Anthor: YangYutong\r\n * Create: 20181102\r\n * Description: \r\n * 1. it's the Main Application Class, all other windows classes are attaced to this class.\r\n * 2. It's a self runnning class, the object[yut] or [theApp] will be created after the script is included by user\r\n * 3. key Global members:\r\n *    3.1. theApp/yut: this pointer of the class object.\r\n *    3.2. m_strAppName: special name of theApp\r\n *    3.3. m_hMainWnd: main frame handle of the MainFrm Class.\r\n *    3.4. m_Store: data store of this app.\r\n * Usage: \r\n * 1. add Init() into <body> => <body id=\"mainFrm\" onload=\"Init()\">\r\n * 2. attache MainFrm class to theAPP => theApp.attachMainFrm(CMainFrm);\r\n * -----------------\r\n * change log:\r\n * 2018-12-13: change to class type with 'static' keyword, to force usage by class name. e.g. theApp.setAppName('myApp')\r\n */\r\n// include the tools lib\r\n// document.write('<script type=\"text/javascript\" src=\"./src/yutools.js\"></script>');\r\n// yutls.includeJs('./CEvent.js');\r\n// yutls.includeJs('./CStore.js');\r\n// yutls.includeJs('./CView.js');\r\n\r\n//code\r\n// (function(window,undefined){\r\nclass theApp {\r\n    constructor() {\r\n        // 构造函数\r\n        var _this = this;\r\n        //1.内部变量+内部函数\r\n        //2.外部成员\r\n        // _this._strViewID = 'theAPP';\r\n        _this.m_strAppName = '';\r\n        _this.m_hMainWnd = '';\r\n        _this.m_Store = new CStore();\r\n    }\r\n    /**\r\n     * create a mainfrm for this application\r\n     * @param aClassName the name of class. e.g. CMainFrm.\r\n     */\r\n    static attachMainFrm(aClassName) {\r\n        if ((typeof aClassName != 'function') || (aClassName == null) || (aClassName == undefined)) {\r\n            console.error('theApp.attachMainFrm: invalid class name.');\r\n            return;\r\n        }\r\n        let oMainFrm = new aClassName(this);\r\n        theApp.m_hMainWnd = oMainFrm;\r\n        oMainFrm.activeView(); // avtive itself, this line is used to trigger mainFrm's evActived.\r\n    }\r\n    static setAppName(aAppName) {\r\n        if ((aAppName != null) && (aAppName != undefined)) {\r\n            this.m_strAppName = aAppName;\r\n        }\r\n    }\r\n    static setMainWnd(aWnd) {\r\n        if ((aWnd != null) && (aWnd != undefined)) {\r\n            this.m_hMainWnd = aWnd;\r\n        }\r\n    }\r\n    static setStoreData(aData) {\r\n        if ((aData != null) && (aData != undefined)) {\r\n            this.m_Store.setData(aData);\r\n        }\r\n    }\r\n    static getStoreData() {\r\n        return this.m_Store.getData();\r\n    }\r\n    /** ---\r\n         * THIS function provide tranverse all views in this APP, caller\r\n         * can do his special operation by input call back fucntion.\r\n         * THIS will input object handle of the views into callbakc func.\r\n         *\r\n         * @param cbFunc the call back function, that inputed by caller.\r\n         */\r\n    static traverseAllViews(cbFunc) {\r\n        /**\r\n         * traverseNode, and exec _loadHtml() to render all views\r\n         */\r\n        function traverseNode(node) {\r\n            if ((node != undefined) || (node != null)) {\r\n                if (typeof cbFunc == 'function') {\r\n                    cbFunc(node);\r\n                }\r\n            }\r\n            if (node._childViewObjsTree.childView && node._childViewObjsTree.childView.length > 0) {\r\n                for (let i = 0; i < node._childViewObjsTree.childView.length; i++) {\r\n                    traverseNode(node._childViewObjsTree.childView[i]);\r\n                }\r\n            }\r\n        }\r\n        /** ----------\r\n         * DO traverseNode operation...\r\n         */\r\n        traverseNode(this.m_hMainWnd);\r\n    }\r\n    // theApp.test = function(cb){\r\n    //     let type = typeof cb;\r\n    //     let pa = 12;\r\n    //     cb(pa);\r\n    // }\r\n    //\r\n    static whoami() { alert(\"THIS is theAPP\"); }\r\n}\r\n    //\r\n    // if ( typeof window === \"object\" && typeof window.document === \"object\" ) {\r\n    //     window.theApp = window.yut = theApp//window.$;\r\n    // }\r\n//\r\nexport default theApp;\r\n// })(window);","/**\r\n * Tools set for yutls\r\n * Anthor: YangYutong\r\n * Create: 2018-4-12\r\n * change log:\r\n * 2018-12-13: change to class type with 'static' keyword, to force usage by class name. e.g. yutls.msgDebug()\r\n */\r\n// (function(window,undefined){\r\n//\r\nclass yutls {\r\n    constructor() {\r\n        this.gDebugData = 0;\r\n        this.gDebugFlg = 0;\r\n     }\r\n    //-debug functions\r\n    /**\r\n     * set status of debug, and set the return string of debug url.\r\n     * @param data: object of {debug:url string}.\r\n     * @param flg: the type of debug. \r\n     *  e.g. \r\n     *  var data = {'noDebug':'/cgi-bin/cgi.cgi',\r\n     *              'mock':'./debug/mock',\r\n     *              'php':'./debug/action/action.test.php'};\r\n     *   setGlobalDebugFlg(data, 'mock');\r\n     *   ...\r\n     *   getDebugUrl(); => this line return './debug/mock'\r\n     */\r\n    static setGlobalDebugFlg(data, flg){\r\n        if ((data == null) || (data == undefined)) {\r\n            this.msgBox('invalid input data!');\r\n            return;\r\n        }\r\n        //\r\n        this.gDebugData = data;\r\n        this.gDebugFlg = flg;\r\n    }\r\n    static getDebugURL(){\r\n        let type = this.gDebugFlg;\r\n        return this.gDebugData[type];\r\n    }\r\n    //---\r\n    static msgBox(strMsg) {\r\n        alert(strMsg);\r\n    }\r\n    //\r\n    static msgDebug(strMsg) {\r\n        console.debug(strMsg);\r\n    }\r\n    // Includes a script file by writing a script tag.\r\n    static includeJs(src) {\r\n        document.write(\"<script type=\\\"text/javascript\\\" src=\\\"\" + src + \"\\\"></script>\");\r\n    }\r\n    // Includes a style sheet by writing a style tag.\r\n    static includeCss(src) {\r\n        // document.write(\"<style type=\\\"text/css\\\"> @import url(\\\"\" +  src + \"\\\"); </style>\");\r\n        var _style = document.createElement('style');\r\n        _style.innerHTML = ' @import url(\\\"' +  src + '\\\");';\r\n        document.getElementsByTagName('head')[0].appendChild(_style);\r\n        // console.log(_style.innerHTML);\r\n    }\r\n    /* -- Localizing: multi-language ---\r\n        * aLanguage: { language: 'cn',\r\n        *               htmlMap: {'cn': cnHtmlMap ,'en': enHtmlMap,},\r\n        *               jsMap: {'cn': cnJsMap ,'en': enJsMap,} },\r\n        */\r\n    static htmlSwitchLang(aOption) {\r\n        var map = aOption.htmlMap[aOption.language];\r\n        for (var name in map) {\r\n            var element = document.getElementById(name);\r\n            if (null == element) {\r\n                console.log(name);\r\n            }\r\n            else {\r\n                element.innerHTML = map[name];\r\n            }\r\n        }\r\n    }\r\n    static jsSwitchLang(aOption, aItem) {\r\n        var map = aOption.jsMap[aOption.language];\r\n        return map[aItem];\r\n    }\r\n    /**\r\n         * convert number to string, and fill '0' before the number.\r\n        */\r\n    static getzf(num) {\r\n        if (parseInt(num) < 10) {\r\n            num = '0' + num;\r\n        }\r\n        return num;\r\n    }\r\n    /**\r\n         * parse the time to yyyy-mm-dd hh:mm:ss\r\n        */\r\n    static getDateByYMD(ms) {\r\n        var timeMs = Number(parseInt(ms));\r\n        var oDate = new Date(timeMs), oYear = oDate.getFullYear(), oMonth = oDate.getMonth() + 1, oDay = oDate.getDate(), oHour = oDate.getHours(), oMin = oDate.getMinutes(), oSen = oDate.getSeconds(), oTime = oYear + '-' + yutls.getzf(oMonth) + '-' + yutls.getzf(oDay) + ' ' + yutls.getzf(oHour) + ':' + yutls.getzf(oMin) + ':' + yutls.getzf(oSen); //最后拼接时间\r\n        return oTime;\r\n    }\r\n    /**\r\n         * parse the time to hh:mm:ss\r\n        */\r\n    static getDateByHMS(ms) {\r\n        var timeMs = Number(parseInt(ms));\r\n        var oHour = parseInt(timeMs / (1000 * 60 * 60));\r\n        var oMin = parseInt((timeMs % (1000 * 60 * 60)) / (1000 * 60));\r\n        var oSen = parseInt((timeMs % (1000 * 60)) / 1000);\r\n        var oTime = yutls.getzf(oHour) + ':' + yutls.getzf(oMin) + ':' + yutls.getzf(oSen);\r\n        return oTime;\r\n    }\r\n    /**\r\n     * check browser type\r\n    */\r\n    static getBrowser() {\r\n        var ua = window.navigator.userAgent;\r\n        //var isIE = window.ActiveXObject != undefined && ua.indexOf(\"MSIE\") != -1; \r\n        var isIE = !!window.ActiveXObject || \"ActiveXObject\" in window;\r\n        var isFirefox = ua.indexOf(\"Firefox\") != -1;\r\n        var isOpera = window.opr != undefined;\r\n        var isChrome = ua.indexOf(\"Chrome\") && window.chrome;\r\n        var isSafari = ua.indexOf(\"Safari\") != -1 && ua.indexOf(\"Version\") != -1;\r\n        if (isIE) {\r\n            return \"IE\";\r\n        }\r\n        else if (isFirefox) {\r\n            return \"Firefox\";\r\n        }\r\n        else if (isOpera) {\r\n            return \"Opera\";\r\n        }\r\n        else if (isChrome) {\r\n            return \"Chrome\";\r\n        }\r\n        else if (isSafari) {\r\n            return \"Safari\";\r\n        }\r\n        else {\r\n            return \"Unkown\";\r\n        }\r\n    }\r\n    // Nokia ajax req\r\n    static ajaxReq() \r\n    {\r\n        //  xmlHttpRequest object   \r\n        var request = null;\r\n\r\n        // branch for native XMLHttpRequest object\r\n        if(window.XMLHttpRequest && !(window.ActiveXObject)) {\r\n            try \r\n            {\r\n                request = new XMLHttpRequest();\r\n                try\r\n                {\r\n                    //  attach the Bypass code, if the browser is firefox\r\n                    if(netscape.security.PrivilegeManager.enablePrivilege)\r\n                    {\r\n                        //  duplicate the function\r\n                        request._open = request.open;\r\n                        \r\n                        //  redefine the function definition\r\n                        request.open = function(method, url, flag)\r\n                        {\r\n                            try\r\n                            {\r\n                                // Enable Universal Browser Read\r\n                                netscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserRead\");\r\n\r\n                                //  call the native XmlHttpRequest.open method\r\n                                this._open(method, url, flag);\r\n                            }catch(e)\r\n                            {\r\n                                //  call the native XmlHttpRequest.open method\r\n                                this._open(method, url, flag);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e)\r\n                {\r\n                    //  eatup all exceptions\r\n                }\r\n            } \r\n            catch(e) {\r\n                request = null;\r\n            }\r\n        // branch for IE/Windows ActiveX version\r\n        } else if(window.ActiveXObject) {\r\n            try {\r\n                request = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n            } catch(e) {\r\n                try {\r\n                    request = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                } catch(e) {\r\n                    alert('Failed to create XmlHttprequest');\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (request);\r\n    }\r\n    //\r\n    /* retrieves data from server via ajax\r\n        readyState=>XMLHttpRequest process status:\r\n        0:XMLHttpRequest no init\r\n        1:XMLHttpRequest start send out req\r\n        2:XMLHttpRequest req sent out\r\n        3:XMLHttpRequest start to read server's response\r\n        4:XMLHttpRequest complete to read server data.\r\n    // GET格式        \r\n    var aParam = \"userName=zhangsan & pwd=\"1234\";\r\n    var aUrl = gUrl + \"/mobile/auth.php\";\r\n    //POST格式\r\n    var aParam = aDat;\r\n    var aUrl = gUrl + \"/mobile/auth.php\";\r\n    ===============\r\n    ajaxParam = \r\n    { url: \"\",\r\n        type: \"POST\", //\"GET\"\r\n        data: {\r\n        dataType: \"json\", //\"form\"\r\n        \"command\": \"myCommond\",\r\n        \"otherData\": \"\" \r\n        },\r\n        success: function (data) {},\r\n        error: function (errorThrown) { alert(\"error\");}\r\n    }\r\n    */\r\n   static ajax(ajaxParam){\r\n    try{\r\n        //\r\n        function myErrFun(msg){alert(msg);return;}\r\n        //code the aParam\r\n        function codeParamData(data){\r\n            var rc = \"\";\r\n            for(var name in data){  \r\n                rc += name+\"=\"+ data[name]+\"&\";  \r\n            }\r\n            return rc.substring(0, rc.length-1);//encodeURIComponent( rc.substring(0, rc.length-1) );\r\n        }\r\n        //\r\n        var aHeaderContentTypeNormal = \"application/x-www-form-urlencoded;charset=utf-8\";\r\n        var aHeaderContentTypeJson = \"application/json;charset=utf-8\";\r\n        var aUrl = ajaxParam.url;\r\n        var PostType = ajaxParam.type.toLowerCase();\r\n        var aParam = codeParamData(ajaxParam.data);\r\n        //\r\n        var aHeaderContentType = aHeaderContentTypeNormal;\r\n        // aHeaderContentType = ajaxParam.data.dataType.toLowerCase();;\r\n        // if(\"json\" == aHeaderContentType)\r\n        //     aHeaderContentType = aHeaderContentTypeJson;\r\n        // else\r\n        //     aHeaderContentType = aHeaderContentTypeNormal;\r\n        //\r\n        var aCallbackSucc;\r\n        if(typeof(ajaxParam.success) == \"undefined\" )\r\n            throw \"No ajaxParam.success()\";\r\n        else\r\n            aCallbackSucc = ajaxParam.success;\r\n        var aCallbackErr;\r\n        if(typeof(ajaxParam.error) == \"undefined\" )\r\n            aCallbackErr = myErrFun;\r\n        else\r\n            aCallbackErr = ajaxParam.error;\r\n        // new req\r\n        var xmlHttpReq = yutls.ajaxReq();\r\n    }catch(e) {alert(\"XMLHttpRequest catch(\" + e +\")\");return;}\r\n\r\n        xmlHttpReq.onreadystatechange = function() {\r\n            var status;\r\n            if (xmlHttpReq.readyState == 4)\r\n            {\r\n            try{\r\n                status = xmlHttpReq.status;// == 200) {\r\n                }catch(e) {alert(xmlHttpReq.status + e);}\r\n\r\n                //operation with Server\r\n                if(status == 200)\r\n                {\r\n                    if(xmlHttpReq.responseText != null)\r\n                        aCallbackSucc(xmlHttpReq.responseText);\r\n                    else if(xmlHttpReq.responseXML != null)\r\n                        aCallbackSucc(xmlHttpReq.responseXML);\r\n                    else\r\n                        aCallbackErr(\"error:Response is NULL\");\r\n                } \r\n                else  if (xmlHttpReq.readyState == 4 && status != 200 && status != 0)\r\n                {\r\n                    var err = \"error: error status: \"+status;\r\n                    aCallbackErr(err);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (\"get\" == PostType){\r\n            // GET operation\r\n            var aUrlGet = aUrl + \"?\" + aParam;\r\n            //xmlHttpReq.open(\"GET\", aUrl+\"?username=\"+escape(aParam.UserName), true);\r\n            xmlHttpReq.open(\"GET\", aUrlGet, true);\r\n            xmlHttpReq.send(null);\r\n        }\r\n        else if(\"post\" == PostType){\r\n            //POST operation\r\n            xmlHttpReq.open(\"post\", aUrl, true);\r\n            //xmlHttpReq.setRequestHeader(\"Content-Length\",aParam.length);\r\n            if(0 != aHeaderContentType)\r\n            { \r\n            /* \"application/json\" for new application\r\n            * \"application/x-www-form-urlencoded\" for normal application\r\n            */\r\n            xmlHttpReq.setRequestHeader(\"Content-Type\", aHeaderContentType);\r\n            }\r\n            //aParam = \"command=loginByUserPWD&login_user=zhangsan & login_pwd=1234\";\r\n            console.log('ajax->aParam:'+aParam);\r\n            xmlHttpReq.send(aParam);\r\n        }\r\n    }\r\n    /** loadHtml()\r\n     * load html file into the node\r\n     * @param aNode the node handle of DOM\r\n     * @param aFileDat source html module\r\n     * @param cbFunc callback function with input[node]\r\n     * 2019-05-15: remove ajax function, replace to ES6 import funciton to load the html file by a module.\r\n     */\r\n    static load(aNode, aFileDat, cbFunc){\r\n        if ((typeof cbFunc != 'function')||(typeof aNode == 'undefined')||(aNode == null) ){\r\n            return;\r\n        }\r\n    /* 2019-05-15: remove ajax function\r\n        // internal func to add inne html\r\n        function addHtml(data){\r\n            aNode.innerHTML = data; //TODO,需要考察加载大文件时候是否需要做加载结束事件进行同步操作！\r\n            cbFunc();\r\n        }\r\n        // call ajax to load file\r\n        yutls.ajax({ \r\n            url: aFileDat,\r\n            type: \"POST\",\r\n            success: addHtml,\r\n            error: cbFunc\r\n        });\r\n    */\r\n        aNode.innerHTML = aFileDat; //TODO,需要考察加载大文件时候是否需要做加载结束事件进行同步操作！\r\n        cbFunc();\r\n    }\r\n}\r\n\r\n    //\r\n    // if ( typeof window === \"object\" && typeof window.document === \"object\" ) {\r\n    //     window.yutls = yutls;\r\n    // }\r\n    export default yutls;\r\n// })(window);\r\n\r\n\r\n\r\n","/**\r\n * CStroe: Two-way binding. e.g. {varName: varValue} => <a>{{varName}}</a>\r\n * Anthor: YangYutong <70248717@qq.com>\r\n * Create: 20181102\r\n * Description: \r\n *   refer and thanks for: https://blog.csdn.net/qq_34829112/article/details/76345928?utm_source=blogxgwz1\r\n *   Provide a way to binld the var data to HTML {{}},\r\n *     the data that is defined in myClass.aRenderData, that will be render to HTML {{var}}\r\n * Usage:\r\n * 1. define data in myClass.aRenderData.: \r\n   class CMyView {\r\n    constructor() {\r\n        let option = {\r\n            aRenderData: {dsvFWVerVal: '0.0.1'},\r\n        };\r\n        this.init(option);\r\n    }\r\n * 2. define the SAME name of data in HTML: \r\n    <a>{{dsvFWVerVal}}</a>\r\n * 3. HTML will be rendered when dsvFWVerVal is changed.\r\n */\r\nclass CStore {\r\n    constructor() {\r\n        // constructor\r\n        var _this = this;\r\n        //1. internal variant / function\r\n        //2. exported variant / function\r\n        _this._data = {}; //暂时无用！考虑与_renderData合并\r\n        /* --\r\n         * the var data that will be render to HTML {{var}}\r\n         * {varName: varValue} => <a>{{varName}}</a>\r\n         */\r\n        _this._renderData = {};\r\n        /* --\r\n         * the var : <a> id : callback mapping\r\n         * {varName: {id: <a> id, cb: func}}\r\n         */\r\n        _this._renderData2CbMap = {};\r\n        _this.m_bForceFresh = false; // force to fresh renderData.\r\n    }\r\n    /** VARIANT OBSERVE\r\n     * listen the this.data, when data is changed, the callback will rend the html\r\n     * regist the veriant to setter observer cabll back.\r\n     * @param aData supput variant type and array thpe. BUT, the array type is not used in the variant/html binding!\r\n     */\r\n    regRenderData(aData) {\r\n        if ((Object.prototype.toString.call(aData) != '[object Object]')\r\n            && (Object.prototype.toString.call(aData) != '[object Array]')) {\r\n            console.error('the type of aData should be [Object or Array]!');\r\n            return false;\r\n        }\r\n        // start the observer listen\r\n        this._observer(aData);\r\n    }\r\n    _observer(aData) {\r\n        if (Object.prototype.toString.call(aData) == '[object Array]') {\r\n            this._overrideArrayPrototype(aData, path);\r\n        }\r\n        Object.keys(aData).forEach((variantName) => {\r\n            let oldVal = aData[variantName];\r\n            Object.defineProperty(aData, variantName, {\r\n                get: function () {\r\n                    return oldVal;\r\n                },\r\n                set: (function (newVal) {\r\n                    //m_bForceFresh=>refresh the variant wether it has been changed or not\r\n                    //this is the init view page case!\r\n                    if ((this.m_bForceFresh) || (oldVal != newVal)) {\r\n                        if (Object.prototype.toString.call(newVal) == '[object Array]') {\r\n                            // check sub objects\r\n                            this._observer(newVal);\r\n                        }\r\n                        // work on the variant\r\n                        this._renderCb(variantName, newVal, oldVal);\r\n                        oldVal = newVal;\r\n                    }\r\n                }).bind(this),\r\n            }); // end of Object.defineProperty\r\n            if ((Object.prototype.toString.call(aData[variantName]) == '[object Object]')\r\n                || (Object.prototype.toString.call(aData[variantName]) == '[object Array]')) {\r\n                this._observer(aData[variantName]);\r\n            }\r\n        }, this); // end of Object.keys\r\n    }\r\n    //--- ARRAY VARIANT OBSERVE\r\n    _overrideArrayPrototype(aArrayData, owner) {\r\n        //1. save the original one\r\n        var originalPrototype = Array.prototype,\r\n            //2. create new one\r\n            overridePrototype = Object.create(Array.prototype), _this = owner, result;\r\n        ArrayAction = ['push', 'pop', 'shift', 'unshift', 'short', 'reverse', 'splice'];\r\n        ArrayAction.forEach((method) => {\r\n            Object.defineProperty(overridePrototype, method, {\r\n                value: function () {\r\n                    var oldVal = this.slice();\r\n                    // call original prototype\r\n                    result = originalPrototype[method].apply(this, arguments);\r\n                    //\r\n                    _this._renderCb(this, oldVal);\r\n                    return result;\r\n                }\r\n            });\r\n        });\r\n        // change the array data ___Proto__ to the override one\r\n        aArrayData.__proto__ = overridePrototype;\r\n    }\r\n    /** ---  VARIANT OBSERVE Render\r\n    * override Array data observe, BUT the Array is not recommended.\r\n    * @param variantName name of the variant\r\n    * @param newVal\r\n    * @param oldVal\r\n    */\r\n    _renderCb(variantName, newVal, oldVal) {\r\n        let id = this._renderData2CbMap[variantName];\r\n        // console.log(variantName+'<>'+id);\r\n        if (id != undefined) {\r\n            var element = document.getElementById(id);\r\n            if (element) {\r\n                element.innerHTML = newVal;\r\n            }\r\n        }\r\n        else {\r\n            console.warn('CStore._renderCb:: invalid variant! ');\r\n        }\r\n    }\r\n    setRenderData(aData) {\r\n        this._renderData = aData;\r\n    }\r\n    getRenderData() {\r\n        return this._renderData;\r\n    }\r\n    /**\r\n     * manage a mapping table for data<=>html refresh\r\n     * {variantName: ID}\r\n     */\r\n    actRenderData2CbMap(aAct, aKeyVariName, aID) {\r\n        //1. aOpt=> clear/add/del\r\n        //2. aKeyVariName:aID\r\n        switch (aAct) {\r\n            case 'clear':\r\n                this._renderData2CbMap = {};\r\n                break;\r\n            case 'add':\r\n                this._renderData2CbMap[aKeyVariName] = aID;\r\n                break;\r\n            case 'del':\r\n                delete this._renderData2CbMap[aKeyVariName];\r\n                break;\r\n            default:\r\n                console.error('CStore:: unknow action in actRenderData2CbMap! ');\r\n        }\r\n        // console.log(this._renderData2CbMap);\r\n    }\r\n    setData(aData) {\r\n        if ((aData != null) && (aData != undefined)) {\r\n            this._data = aData;\r\n        }\r\n    }\r\n    getData() {\r\n        return this._data;\r\n    }\r\n}\r\n// CStore.prototype = {\r\n//     constructor: CStore,\r\n// }\r\n\r\nexport default CStore;\r\n// export { CStore };","/**\r\n * CEvent class , for customize event.\r\n * Anthor: YangYutong <70248717@qq.com>\r\n * Create: 20181102\r\n * Description: \r\n *  1. event don't be removed after it is triggered.\r\n * Usage:\r\n    function myEvHanderFunc(){\r\n        console.log('my event is handled.');\r\n    }\r\n    function myEvHander2(data){\r\n        let food = data.food;\r\n        console.log('my event is handled:' + food);\r\n    }\r\n    //\r\n    var evFactory = new CEvent();\r\n    evFactory.addEvent('eat', myEvHanderFunc);\r\n    evFactory.addEvent('eat', myEvHander2);\r\n    evFactory.triggerEvent({\r\n            type: \"eat\"\r\n        });\r\n    evFactory.triggerEvent({\r\n            type: \"eat\",\r\n            food: \"rice\"\r\n        });\r\n\r\n* */\r\n//Class CEvent\r\nclass CEvent {\r\n    constructor() {\r\n        //event handler function mapping\r\n        // {type1: [func11, func12, ..],\r\n        //   type2: [func21, func22,..],\r\n        //  ...}\r\n        this.handlers = {};\r\n    }\r\n    /* regist new event and handler fucntion\r\n    *  @param: \r\n    *      type -> event\r\n    *      handler -> call back\r\n    */\r\n    addEvent(type, handler){\r\n        //1. check if this event has exist or not\r\n        if(typeof this.handlers[type] == 'undefined'){\r\n            this.handlers[type] = [];\r\n        }\r\n        //2.push new event and reg handler\r\n        this.handlers[type].push(handler);\r\n    }\r\n    /* trigger the event with type and other parameters are allowed to be attached\r\n    *  @param: \r\n    *      event -> {type: myevent, others: xxx, ...}\r\n    */\r\n    triggerEvent(event){\r\n        if(!event.target){\r\n            event.target = this;\r\n        }\r\n        //1. check if this event has exist and it's a array\r\n        if(this.handlers[event.type] instanceof Array){\r\n            //2. locate the right event in mapping\r\n            let handlers = this.handlers[event.type];\r\n            //3. execute the all callback handlers\r\n            for(let i = 0; i < handlers.length; i++){\r\n                handlers[i](event);\r\n            }\r\n        }\r\n    }\r\n    /* remove the event handler mapping\r\n    *  @param: \r\n    *      type -> event\r\n    *      handler -> call back\r\n    */\r\n   removeEvHandler(type, aHandler){\r\n        //1. check if this event has exist and it's a array\r\n        if(this.handlers[type] instanceof Array){\r\n            //2. locate the right event in mapping\r\n            var handlers = this.handlers[type];\r\n            //3. delete all handlers in mapping\r\n            var i = 0;\r\n            for(i = 0; i < handlers.length; i++){\r\n                if(handlers[i] == aHandler){\r\n                    break;\r\n                }\r\n            }\r\n            //delete from mapping\r\n            handlers.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport default CEvent\r\n// export {CEvent};","/**\r\n * CView - base class of VIEW windows.\r\n * Anthor: YangYutong <70248717@qq.com>\r\n * Create: 20181102\r\n * Description: \r\n *  init the view by the html and ctrls\r\n * How to use: \r\n * A. Define child view class\r\n *      1. create CChildView's constructor\r\n *      2. fill option = {} in constructor\r\n *      3. call this.init() in constructor\r\n *      4. CChildView.prototype = new CView(); \r\n * B. Create OBject from class\r\n *      objectChildView = new CChildView(handleOfParentView);\r\n * -----------------------------------------\r\n */\r\n// yutls.includeJs('./CStore.js');\r\nimport theApp from './yutapp';\r\nimport CStore from './CStore';\r\nimport CEvent from './CEvent';\r\nimport yutls from './yutools';\r\n\r\nclass CView {\r\n    constructor() {\r\n        // constructor\r\n        var _this = this;\r\n        //1.variant + functions\r\n        _this._hParent = 0; // parent handle of THIS view.\r\n        _this._strViewID = '';\r\n        _this._strHtmlSrc = '';\r\n        _this._hRegCtrlCb = 0;\r\n        _this._oLanguage = {};\r\n        //2. init the objects\r\n        _this._viewStore = new CStore();\r\n        /*\r\n        *  a set of all childviews NAME, these are used to create the childview objects\r\n        *  [COneView, CTwoView,...]\r\n        *  - used to create all child subviews by the class NAMR, one by one.\r\n        */\r\n        _this._childViewsArray = [];\r\n        /*\r\n        *  a set of all childviews OBJECT, these are used to views refresh and show/hidden opeartion.\r\n        *  { mounted: 0, childView: [] }\r\n        * -\r\n        * 1. mounted => THIS view is mounted completely (all subviews are done.)\r\n        * 2. childView[] => the child views of THIS view.\r\n        */\r\n        _this._childViewObjsTree = { mounted: 0, childView: [] }; //{ parent: 0, mounted: 0, childView: [] };\r\n        /**\r\n         * event call back functions list\r\n         * when the event is trigger, CView's event process will check and rout to the registed cb function.\r\n         */\r\n        _this._oEvCallback = {};\r\n        // event process\r\n        _this._evView = ['evMounted', 'evActived'];\r\n        _this._evFactory = new CEvent();\r\n        for (let i = 0; i < _this._evView.length; i++) {\r\n            let type = _this._evView[i];\r\n            switch (type) {\r\n                case 'evMounted':\r\n                    _this._evFactory.addEvent('evMounted', _this._defaultevViewMounted);\r\n                    break;\r\n                case 'evActived':\r\n                    _this._evFactory.addEvent('evActived', _this._defaultevActivedView);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * init after New object.\r\n     * @param option = {\r\n     *          aParent: [Peremptory]  // parent view's this pointer\r\n     *          aNodeID: [Peremptory]  //dom node id\r\n     *          aHtml:   [Optional]    //html source file string\r\n     *          aRegCtrlCallBack: [Optional] //call back function for ctrl\r\n     *          aLanguage:  [Optional] // multi language option\r\n     *              { language: 'cn',\r\n     *                  htmlMap: {'cn': _this.cnHtmlMap{..} ,'en': _this.enHtmlMap{..},..},\r\n     *                  jsMap: {'cn': _this.cnJsMap{..},'en': _this.enJsMap{..},..} }\r\n     *          aChildViews: [Optional] // array of chile views\r\n     *          aRenderData：[Optional] // variant list for HTML render\r\n     *          aEvCallback: [Optional] // call back functions for event\r\n     *              {enType1: cbFunc1, ... }\r\n     *         }\r\n     */\r\n    init(option) {\r\n        if ((option == null) || (option == undefined)\r\n            || (option.aParent == null) || (option.aParent == undefined)\r\n            || (option.aNodeID == null) || (option.aNodeID == undefined)\r\n            // ||(aHtml == null)||(aHtml == undefined)\r\n            // ||(aRegCtrlCallBack == null)||(aRegCtrlCallBack == undefined)\r\n            // ||(aLanguage == null)||(aLanguage == undefined)\r\n        ) {\r\n            alert('CView: option parameter is Invalid! Pls, check!');\r\n            console.error('CView: option parameter is Invalid');\r\n            console.error(option);\r\n            return;\r\n        }\r\n        //1.variant + functions\r\n        this._hParent = option.aParent;\r\n        //this._childViewObjsTree.parent = this._hParent;\r\n        this._childViewObjsTree.mounted = 0;\r\n        this._strHtmlSrc = option.aHtml;\r\n        this._hRegCtrlCb = option.aRegCtrlCallBack;\r\n        this._oLanguage = option.aLanguage;\r\n        if (option.aChildViews != undefined)\r\n            this._childViewsArray = option.aChildViews;\r\n        if (option.aRenderData != undefined)\r\n            this._viewStore.setRenderData(option.aRenderData);\r\n        if (option.aEvCallback != undefined)\r\n            this._oEvCallback = option.aEvCallback;\r\n        //2. init the objects\r\n        this._strViewID = option.aNodeID;\r\n        this.node = document.getElementById(option.aNodeID);\r\n        //this.jqNode = $('#' + option.aNodeID); // jQuery node object\r\n        // 1. load view'html 2.multi language 3.regiest ctrls\r\n        this._loadHtml();\r\n    }\r\n    //----- Load the html src of this view\r\n    //1. load the html source\r\n    //2. multi language\r\n    //3. convert {{var}} by add new id into the <a>\r\n    //4. regiest the dom call back\r\n    _loadHtml() {\r\n        if ((this._strHtmlSrc == null) || (this._strHtmlSrc == undefined)) { //if this view no html, do nothing.\r\n            console.error('CView._loadHtml, no html exists.');\r\n        }\r\n        else {\r\n            // 2019-05-15: remove ajax function, replace by ES6 import\r\n            // this.jqNode.load(this._strHtmlSrc, () => {\r\n            yutls.load(this.node ,this._strHtmlSrc, () => {\r\n                //console.log('CView._loadHtml::'+this._strHtmlSrc);\r\n                yutls.htmlSwitchLang(this._oLanguage);\r\n                // add new id for every <a>\r\n                this._convertVarInHtml();\r\n                // regist the DOM callback functions\r\n                this._hRegCtrlCb();\r\n                // force refresh my view\r\n                this.forceRefreshRender();\r\n                // create subviews\r\n                this._createChildViews();\r\n            });\r\n        }\r\n    }\r\n    //--- force to refresh the variant whether it has been changed or not\r\n    // this will disable CStore._observer(){ ... if(oldVal != newVal)...}\r\n    // after refreshing it'll enable CStore._observer(){ ... if(oldVal != newVal)...}\r\n    forceRefreshRender(aData) {\r\n        let data;\r\n        if (aData == null || aData == undefined) {\r\n            data = this._viewStore.getRenderData();\r\n        }\r\n        this._viewStore.m_bForceFresh = true;\r\n        Object.keys(data).forEach((key) => {\r\n            let val = data[key];\r\n            if ((Object.prototype.toString.call(val) == '[object Object]')\r\n                || (Object.prototype.toString.call(val) == '[object Array]')) {\r\n                this.forceRefreshRender(val);\r\n            }\r\n            // !force setter refresh!\r\n            this._viewStore._renderData[key] = val;\r\n        });\r\n        this._viewStore.m_bForceFresh = false;\r\n    }\r\n    //----- Search the {{variantname}} in html-<a> node,then add a id for the <a> \r\n    //1. variants are located in <a> and marked by {{variantname}},\r\n    //2. variants are reg into CStore::_viewStore._renderData => {varName: varValue},\r\n    //3. find {{variantname}} in html-<a> nodes,then make a new id to this <a> //newID = viewName +'-'+ variantName;\r\n    //4. regiest the variants:newID into CStore::_viewStore._renderData2CbMap => {varName: newID},\r\n    _convertVarInHtml() {\r\n        // console.log('CView._convertVarInHtml->viewname:'+this._strViewID);\r\n        let viewName = this._strViewID;\r\n        this._viewStore.actRenderData2CbMap('clear');\r\n        let data = this._viewStore.getRenderData();\r\n        Object.keys(data).forEach((key) => {\r\n            let variantName = key;\r\n            // let aArray = this.jqNode.find('a');\r\n            let aArray = this.node.getElementsByTagName(\"a\");\r\n            for (let i = 0; i < aArray.length; i++) {\r\n                if (aArray[i].text.indexOf('{{' + variantName + '}}') != -1) {\r\n                    //为每个变量的<a>生成唯一ID，为以后刷新value的回调函数做准备\r\n                    let newID = viewName + '-' + variantName;\r\n                    // console.log(newID);\r\n                    // $(aArray[i]).prop('id', newID);\r\n                    aArray[i].id = newID;\r\n                    this._viewStore.actRenderData2CbMap('add', variantName, newID);\r\n                }\r\n            }\r\n        });\r\n        // regist setter call back\r\n        this._viewStore.regRenderData(data);\r\n    }\r\n    /**\r\n     * create the child views by the views array (with class name)\r\n     * @param: aClassName is NOT string, it's the defination name of Class. e.g. CDashboardView.\r\n     * @param: sender: { viewID: this._strViewID, self: this, parentHandle: this._hParent}\r\n     */\r\n    _createChildViews() {\r\n        let _this = this;\r\n        if (_this._childViewsArray instanceof Array) {\r\n            let numViews = _this._childViewsArray.length;\r\n            //console.log(numViews);\r\n            if (numViews == 0) {\r\n                // no subviews, means THIS view has been mounted.\r\n                _this._childViewObjsTree.mounted = 1;\r\n                _this._evFactory.triggerEvent({\r\n                    type: 'evMounted',\r\n                    sender: { viewID: _this._strViewID, self: _this, parentHandle: _this._hParent }\r\n                });\r\n            }\r\n            else {\r\n                let childObjs = [];\r\n                for (let i = 0; i < numViews; i++) {\r\n                    if ((typeof _this._childViewsArray[i] != 'function') || (_this._childViewsArray[i] == null) || (_this._childViewsArray[i] == undefined)) {\r\n                        console.error('CView._createChildViews: invalid class name.');\r\n                        return;\r\n                    }\r\n                    let obj = new _this._childViewsArray[i](_this);\r\n                    // let viewid = obj._strViewID;\r\n                    childObjs[i] = obj; //{ viewID: viewid, object: obj, mounted: 0};\r\n                }\r\n                _this._childViewObjsTree.childView = childObjs;\r\n                // console.log(this._childViewObjsTree);//(this._childViewObjsTree);\r\n            }\r\n        }\r\n        else {\r\n            console.error('CView._createChildViews input parameter is invalid!');\r\n        }\r\n    }\r\n    /**\r\n     * event: evMounted => THIS view is mounted!\r\n     * This event is opened to class ojects, can be routed to the registed call back func.\r\n     * @param data = {\r\n                        type: 'evMounted',\r\n                        sender: { viewID: this._strViewID, self: this, parentHandle: this._hParent}\r\n                        }\r\n        ---\r\n        1. when subview's childview is NULL, it trigger event(evMounted) to its parent view.\r\n        2. parent view check it's _childViewObjsTree, if all subviews are compelted.\r\n        3. if all subviews are completed mount, THIS view will trigger callback function if it has been registed.\r\n        4. event(evMounted) will be ended if THIS view handle == theAPP.\r\n    */\r\n    _defaultevViewMounted(data) {\r\n        /** internal function\r\n         * traverse the view tree to check whether this view has been mounted (all subviews are mounted)\r\n         * @param INPUT: aThisView => the handle of THIS view.\r\n         * @param OUTPUT:\r\n         */\r\n        function traverseViewTree(aThisView) {\r\n            let _this = aThisView;\r\n            if (_this == theApp) {\r\n                // THIS is theAPP, stop event loop\r\n                console.warn('THIS is theAPP, stop event loop');\r\n                return;\r\n            }\r\n            //\r\n            let subviews = _this._childViewObjsTree.childView;\r\n            let allSubviewsMounted = true;\r\n            if ((subviews == null) || (subviews == undefined)) {\r\n                //a. this view hasn't subviews\r\n                _this._childViewObjsTree.mounted = 1;\r\n            }\r\n            else {\r\n                //b. this view has some subviews\r\n                let subViewCnt = subviews.length;\r\n                for (let i = 0; i < subViewCnt; i++) {\r\n                    if (subviews[i]._childViewObjsTree.mounted == 0) {\r\n                        allSubviewsMounted = false;\r\n                    }\r\n                }\r\n            }\r\n            // c. check, if all subviews are mounted?\r\n            if (allSubviewsMounted) { // all subviews are mounted\r\n                _this._childViewObjsTree.mounted = 1;\r\n                //map to regist function..\r\n                let ff = typeof _this._oEvCallback.evMounted;\r\n                if (ff == 'function') {\r\n                    _this._oEvCallback.evMounted(_this);\r\n                }\r\n                // console.warn('[ViewMounted]=> ' + _this._strViewID);\r\n                //d. goto THIS's parent view to check if the parent is mounted!\r\n                traverseViewTree(_this._hParent);\r\n            }\r\n        }\r\n        /** -----------------\r\n         * process the view mount event\r\n         * sender: { viewID: this._strViewID, self: this, parentHandle: this._hParent}\r\n         */\r\n        let _this = data.sender.self;\r\n        traverseViewTree(_this);\r\n    }\r\n    /**\r\n     * event: evActived => THIS view is Actived to show!\r\n     * When view is actived to show, this event will be triggered and the registed call back func is called.\r\n     * @param data = {\r\n                        type: 'evActived',\r\n                        sender: { viewID: this._strViewID, self: this}\r\n                        }\r\n    */\r\n    _defaultevActivedView(data) {\r\n        let _this = data.sender.self;\r\n        let ff = typeof _this._oEvCallback.evActived;\r\n        if (ff == 'function') {\r\n            _this._oEvCallback.evActived(_this);\r\n        }\r\n    }\r\n    /**\r\n     * add event handlers into this views, in runningtime.\r\n     * @param: evHandle = {evType: 'evActived',\r\n     *                      evCallback: callBackFunc}\r\n     */\r\n    regEvHandler(evHandler) {\r\n        // check if the event type is ok\r\n        let flag = false;\r\n        for (let i = 0; i < this._evView.length; i++) {\r\n            if (evHandler.evType == this._evView[i]) {\r\n                flag = true;\r\n                this._oEvCallback[evHandler.evType] = evHandler.evCallback;\r\n                break;\r\n            }\r\n        }\r\n        if (!flag) {\r\n            console.error('CView.regEvHandler: no evType is found(' + evHandler.evType + \")\");\r\n        }\r\n    }\r\n    /**\r\n     * delete event handlers from this views, in runningtime.\r\n     * @param: evType: 'evActived'\r\n     */\r\n    unRegEvHandler(evType) {\r\n        // check if the event type is ok\r\n        let flag = false;\r\n        for (let i = 0; i < this._evView.length; i++) {\r\n            if (evType == this._evView[i]) {\r\n                flag = true;\r\n                delete this._oEvCallback[evType];\r\n                break;\r\n            }\r\n        }\r\n        if (!flag) {\r\n            console.error('CView.unRegEvHandler: no evType is found(' + evType + \")\");\r\n        }\r\n    }\r\n    /**\r\n     * --- show one view by dom-id\r\n     */\r\n    _showView(aViewNode, visible) {\r\n        var element = aViewNode;\r\n        if (element == null) {\r\n            return;\r\n        }\r\n        var className = element.className;\r\n        if (className == null) {\r\n            className = \"\";\r\n        }\r\n        if (visible) {\r\n            className = className.replace(/ ?hidden/, \"\");\r\n        }\r\n        else {\r\n            if (className.indexOf(\"hidden\") == -1) {\r\n                if (className.length > 0)\r\n                    className += \" \";\r\n                className += \" hidden\";\r\n            }\r\n        }\r\n        element.className = className;\r\n    }\r\n    /*--- show one or multi subview in a view contains\r\n    * usage1: xxxView.activeView(); => arg is null,means the view will active itself.\r\n    * usage2: xxxParentView.activeView('oneSubView'); => show only one subview\r\n    * usage3: xxxParentView.activeView('oneSubView','twoSubView'); => show two subviews at the same time\r\n    */\r\n    activeView() {\r\n        let cnt = arguments.length;\r\n        if (cnt == 0) { // no arg\r\n            console.log('CView.activeView input 0 => arg is null,means the view will active itself.');\r\n            //trigger evActived\r\n            this._evFactory.triggerEvent({\r\n            type: 'evActived',\r\n                sender: { viewID: this._strViewID, self: this }\r\n            });\r\n            //show the view\r\n            this._showView(this.node, true);\r\n        }\r\n        else { // input many args\r\n            // hidde all views\r\n            for (let element in this._childViewObjsTree.childView) {\r\n                // let element = this._childViewObjsTree.childView[parseInt(i)];\r\n                this._showView(this._childViewObjsTree.childView[parseInt(element)].node, false);\r\n            }\r\n            // show the select views\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                let arg = arguments[i];\r\n                for (let element in this._childViewObjsTree.childView) {\r\n                    let thisView = this._childViewObjsTree.childView[parseInt(element)];\r\n                    if (thisView._strViewID == arg) {\r\n                        //trigger evActived\r\n                        thisView._evFactory.triggerEvent({\r\n                        type: 'evActived',\r\n                            sender: { viewID: this._strViewID, self: thisView }\r\n                        });\r\n                        //show the view\r\n                        this._showView(thisView.node, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// CView.prototype = {\r\n//     constructor: CView, // fix constructor\r\n// }\r\n\r\nexport default CView;","class CTest{\r\n    constructor(){\r\n        this.dat = 'this is test!';\r\n    }\r\n    getDat(){\r\n        return this.dat;\r\n    }\r\n}\r\n\r\nexport default CTest;\r\n// module.exports = CTest;","\r\nclass yutVersion {\r\n    constructor() {\r\n        this.name = 'YUT framework';\r\n        this.releaseVer = '0.9.x'; \r\n     }\r\n}\r\n\r\nexport default yutVersion;\r\n// ---- version ----\r\n//[20181106] 0.9.x: first version, ready for YUT demo.\r\n// TODO list:\r\n// 1. [done]remove jQuery and replace loadfile() by import().\r\n// 2. [doing]create new npm project of 'yur-cli' to create app framework by cli.\r\n","import theApp from './src/yutapp';\r\nimport yutls from './src/yutools';\r\nimport yutVersion from './version';\r\nimport CView from './src/CView';\r\nimport CEvent from './src/CEvent';\r\nimport CStore from './src/CStore';\r\nimport CTest from './src/CTest';\r\n\r\nexport { yutVersion, yutls, theApp, CView, CEvent, CStore,CTest };"],"sourceRoot":""}